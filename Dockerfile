FROM ubuntu as baseline

    LABEL maintainer="hackadvisermx" email="hackadviser@gmail.com"

    RUN \
            apt-get update -y && \
            DEBIAN_FRONTEND="noninteractive" apt-get -y install software-properties-common && \
            add-apt-repository ppa:saiarcot895/chromium-beta 

    RUN apt-get -y update && DEBIAN_FRONTEND="noninteractive" apt-get -y install \
        apache2 \
        apktool \
        awscli \
        chromium-browser \
        bat \
        binwalk \
        cewl \
        checksec \
        cifs-utils \
        curl \
        dnsenum \
        dnsutils \
        dos2unix \
        exiftool \
        fcrackzip \
        figlet \
        foremost \ 
        fping \
        ftp \
        gdb \
        git \
        hashcat \
        hashid \
        host \
        html2text \
        htop \
        hydra \
        iputils-ping \
        john \
        jq \
        locate \
        ltrace \
        lsof \
        knockpy \
        masscan \
        mysql-client \
        nano \
        nbtscan \
        ncurses-hexedit \
        neofetch \
        netcat \
        net-tools \
        nikto \
        nmap \
        nodejs \
        npm \
        medusa \
        openvpn \
        pngcheck \
        python3 \
        python3-pip \
        php  \
        prips \
        p7zip-full \
        rdate \
        recon-ng \
        rlwrap  \
        ruby-full \ 
        squid \
        sqlite3 \
        smbclient \
        smbmap \
        snmp \
        steghide \
        ssh \
        socat \
        strace \
        sudo \
        tcpdump \
        telnet \
        tmux \
        traceroute \
        tree \
        vim \
        wfuzz \
        whatweb \
        whois \
        wget \
        unrar \
        unzip \
        xclip \
        zsh  \
        && \
        gem install \
            wpscan \
            evil-winrm \
            zsteg

FROM baseline as builder
    RUN \
    # Configuracion de Apache y Squid
	sed -i 's/Si Funciona!/Funciona desde el contenedor!/g' /var/www/html/index.html && \	
	echo "http_access allow all" >> /etc/squid/squid.conf && \
    sed -i 's/http_access deny all/#http_access deny all/g' /etc/squid/squid.conf && \
    # Instalar oh-my-zsh, sus plugins y configurarlo
    sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)" "" --unattended && \
    git clone --depth 1 https://github.com/zsh-users/zsh-autosuggestions /root/.oh-my-zsh/custom/plugins/zsh-autosuggestions && \
    git clone --depth 1 https://github.com/zsh-users/zsh-syntax-highlighting /root/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting && \
    git clone --depth 1 https://github.com/zsh-users/zsh-history-substring-search /root/.oh-my-zsh/custom/plugins/zsh-history-substring-search && \
    git clone --depth 1 https://github.com/zsh-users/zsh-completions /root/.oh-my-zsh/custom/plugins/zsh-completions && \
    sed -i '1i export LC_CTYPE="C.UTF-8"' /root/.zshrc && \
    sed -i '2i export LC_ALL="C.UTF-8"' /root/.zshrc && \
    sed -i '3i export LANG="C.UTF-8"' /root/.zshrc && \
    sed -i '4i export LANGUAGE="C.UTF-8"' /root/.zshrc && \
    sed -i 's/plugins=(git)/plugins=(git aws golang nmap node pip pipenv python ubuntu zsh-autosuggestions zsh-syntax-highlighting zsh-history-substring-search zsh-completions)/g' /root/.zshrc && \
    sed -i '78i autoload -U compinit && compinit' /root/.zshrc && \
    # Ruta al archivo de historial del shell zsh para su persistencia (pon aqui la ruta a tu archivo de historia de comandos)
    sed -i '$a export HISTFILE="/root/vpn/.zsh_history"' /root/.zshrc 
    # golang
    WORKDIR /tmp
     RUN \      
         wget -q https://go.dev/dl/go1.21.5.linux-amd64.tar.gz -O go.tar.gz && \ 
         tar -C /usr/local -xzf go.tar.gz && rm go.tar.gz
    ENV GOROOT "/usr/local/go"
    ENV GOPATH "/root/go"
	ENV PATH "$PATH:.:$GOPATH/bin:$GOROOT/bin"


# Instalar herramientas parte 1 - las que bajan con go  
FROM builder as builder1
    WORKDIR /tmp
    RUN \
        # assetfinder
        go install github.com/tomnomnom/assetfinder@latest && \
        # ccat 
        go install github.com/owenthereal/ccat@latest && \
        # ffuf
        go install github.com/ffuf/ffuf@latest && \
        # gobuster
        go install github.com/OJ/gobuster/v3@latest && \
        # httprobe
        go install github.com/tomnomnom/httprobe@latest  && \
        # nuclei
        go install -v github.com/projectdiscovery/nuclei/v2/cmd/nuclei@latest && \
        nuclei -update-templates && \
        # subfinder
        go install -v github.com/projectdiscovery/subfinder/v2/cmd/subfinder@latest  
             
# Instalar herramientas Parte 2 - las que bajan con wget, curl, git clone
FROM builder1 as builder2
    WORKDIR /tmp
        RUN \
         # amass  
            wget -q https://github.com/owasp-amass/amass/releases/latest/download/amass_Linux_amd64.zip -O amass.zip && \
            unzip amass -d amass && rm amass.zip && \
        # aquatone
            wget -q https://github.com/michenriksen/aquatone/releases/download/v1.7.0/aquatone_linux_amd64_1.7.0.zip -O aquatone.zip && \
            unzip aquatone -d aquatone && rm aquatone.zip && \
        # httpx 
            wget -q https://github.com/projectdiscovery/httpx/releases/latest/download/httpx_1.3.7_linux_amd64.zip -O httpx.zip && \
            unzip httpx -d httpx && rm httpx.zip && chmod +x httpx && \
        #findomain
            wget -q https://github.com/Findomain/Findomain/releases/latest/download/findomain-linux.zip -O findomain.zip && \
            unzip findomain && rm findomain.zip && chmod +x findomain && \
        # lazy
            git clone https://github.com/nahamsec/lazys3.git && chmod +x lazys3/lazys3.rb && \
        # seclists
            wget -q -c https://github.com/danielmiessler/SecLists/archive/master.zip -O SecLists.zip && \
            unzip SecLists.zip && rm SecLists.zip && mv SecLists-master seclists && \
        # metasploit 
        curl https://raw.githubusercontent.com/rapid7/metasploit-omnibus/master/config/templates/metasploit-framework-wrappers/msfupdate.erb > msfinstall && \
        chmod 755 msfinstall
 
# Configurar herramientas instaladas Parte 2
FROM builder2 as builder3
    COPY --from=builder2 /tmp /tools/
 	WORKDIR /tools/
 	RUN \
        ./msfinstall && msfupdate && \
        ln -s /tools/aquatone/aquatone /usr/bin/aquatone && \
        ln -s /tools/amass/amass_Linux_amd64/amass /usr/bin/amass && \
        ln -s /tools/findomain /usr/bin/findomain && \
        ln -s /tools/lazys3/lazys3.rb /usr/bin/lazys3 && \
        ln -s /tools/httpx /usr/bin/httpx
 
 FROM builder3 as final
    COPY shell/ /tmp
    WORKDIR /tmp
    RUN \  
        # alias, banner y funciones
        cat alias.sh >> /root/.zshrc && \
        cat banner.sh >> /root/.zshrc && \
        cat funciones.sh >> /root/.zshrc && \
        # configura: nano, tmux
        cp  nanorc  /root/.nanorc && \
        cp .tmux.conf /root && \
        rm -rf * && \
        updatedb

    WORKDIR /root/hackdata