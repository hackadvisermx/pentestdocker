---
- hosts: lab
  become: true
  vars_files:
    - vars/default.yaml

  pre_tasks:
    - name: Prueba de conexión
      ping:
        data: Connection successful
      tags:
         - connection

  roles:
    - oefenweb.fail2ban

  vars:
    fail2ban_services:
      - name: sshd
        port: 22
        maxretry: 1
        bantime: -1

  tasks:
    - name: Actualizar en instalar paquetes
      apt:
        name: [ 'apt-transport-https', 'ca-certificates', 'curl', 'gnupg-agent', 
        'software-properties-common' , 'python3-pip', 'virtualenv', 'python3-setuptools', 'zsh', 'neofetch']
        state: present
        update_cache: yes

    - name: Agrega la llave apt GPG de docker  
      apt_key:
        url: https://download.docker.com/linux/ubuntu/gpg
        state: present

    - name: Agregar el repositorio de docker
      apt_repository:
        repo: deb https://download.docker.com/linux/ubuntu bionic stable
        state: present

    - name: Actualiza en instala docker-ce
      apt:
        name: docker-ce
        state: latest
        update_cache: yes

    - name: Agrega al usuario al grupo docker
      user:
        name: "{{ username }}"
        groups: ["docker"]
        append: yes
    
    - name: Instalar el módulo de Docker para python 
      pip:
        name: docker

    - name: Descargar la imagen del Pentestdocker 
      docker_image:
        name: "{{ docker_image }}"
        source: pull

    - name: Cambiar el shell por defecto a zsh
      user:
        name: "{{ username }}"
        shell: /bin/zsh

    - name: Establece la variable de entorno TERM  
      lineinfile:
        dest: /etc/environment
        line: 'TERM=xterm-256color'

    - name: Clona el repositorio de oh-my-tmux 
      git:
        repo: 'https://github.com/gpakosz/.tmux.git'
        dest: /home/tester/.tmux
        depth: '1'
        force: yes

    - name: Clona el repositorio de oh-my-zsh 
      git:
        repo: 'https://github.com/ohmyzsh/ohmyzsh.git'
        dest: /home/tester/.oh-my-zsh
        depth: '1'
        force: yes

    - name: Crea una liga simbolica para intalar oh-my-tmux
      file:
        src: /home/tester/.tmux/.tmux.conf
        dest: /home/tester/.tmux.conf
        owner: "{{ username }}"
        group: "{{ username }}"
        state: link
        force: yes

    - name: Copia la configuracion de oh-my-zsh configuration al archivo .zshrc
      copy:
        src: /home/tester/.tmux/.tmux.conf.local
        dest: /home/tester/
        remote_src: yes
        owner: "{{ username }}"
        mode: '0644'

    - name: Cambia propietario de oh-my-zsh , grupo y permisos
      file:
        path: /home/tester/.oh-my-zsh
        state: directory
        recurse: yes
        owner: "{{ username }}"
        group: "{{ username }}"
        mode: '0555'

    - name: Copia la configuracion oh-my-zsh al archivo .zshrc
      copy:
        src: /home/tester/.oh-my-zsh/templates/zshrc.zsh-template
        dest: /home/tester/.zshrc
        remote_src: yes
        owner: "{{ username }}"
        mode: '0644'

    - name: Descarga el pluguin zsh-syntax-highlighting 
      git:
        repo: 'https://github.com/zsh-users/zsh-syntax-highlighting.git'
        dest: /home/tester/.oh-my-zsh/custom/plugins/zsh-syntax-highlighting
        depth: '1'
        force: yes

    - name: Descarga el pluguin zsh-completions
      git:
        repo: 'https://github.com/zsh-users/zsh-completions.git'
        dest: /home/tester/.oh-my-zsh/custom/plugins/zsh-completions
        depth: '1'
        force: yes

    - name: Descarga el pluguin zsh-history-substring-search 
      git:
        repo: 'https://github.com/zsh-users/zsh-history-substring-search.git'
        dest: /home/tester/.oh-my-zsh/custom/plugins/zsh-history-substring-search
        depth: '1'
        force: yes

    - name: Descarga el plugion zsh-autosuggestions 
      git:
        repo: 'https://github.com/zsh-users/zsh-autosuggestions.git'
        dest: /home/tester/.oh-my-zsh/custom/plugins/zsh-autosuggestions
        depth: '1'
        force: yes

    - name: Habilita los plugins de oh-my-zsh
      lineinfile:
        path: /home/tester/.zshrc
        regexp: '^plugins=\('
        line: plugins=(git docker tmux ubuntu colored-man-pages zsh-syntax-highlighting zsh-completions history-substring-search zsh-autosuggestions)

    - name: Configuracion de zsh-completions  
      lineinfile:
        path: /home/tester/.zshrc
        state: present
        firstmatch: yes
        insertafter: '^plugins=\('
        line: autoload -U compinit && compinit

    - name: Copiar archivos de vpn (hackthebox,tryhackme)
      copy:
        src: ~/ptd/vpn/ # pon aqui la ruta a tus archivos vpn locales
        dest: /home/tester/vpn/

    - name: Copiar zlogin a .zlogin en remoto
      copy:
        src: ~/ptd/onhost/zlogin.sh  
        dest: /home/tester/.zlogin

    # los alias en onhost/alias.sh permite iniciar el contenedor en la modalidad deseada, en base a la imagen docker ya descargada
    - name: Agregar alias para levantar contenedor dentro del vps
      blockinfile:
        block: "{{ lookup('file','~/ptd/onhost/alias.sh') }}" # remplaza ~/hack/ por la ruta donde clonaste el repo
        path: /home/tester/.zshrc
        backup: yes

    # actualiza los paquetes de la distro
    - name: Actualiza todos los paquetes
      apt: upgrade=dist force_apt_get=yes

    - name: Verfica si es necesaro reiniciar
      register: reboot_required_file
      stat: path=/var/run/reboot-required 

    - name: Reiniciando
      reboot:
        msg: "Reiniciando debido a una actualización de Kernel"
        connect_timeout: 5
        reboot_timeout: 300
        pre_reboot_delay: 0
        post_reboot_delay: 30
        test_command: uptime
      when: reboot_required_file.stat.exists
        

    - name: Configuracion finalizada
      debug:
        msg: Sistema configurado correctamente